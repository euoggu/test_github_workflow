name: BuildandPackageArtifacts

on:
  push:
    branches: [ "main" ]

env:
  ACTIONS_RUNNER_DEBUG: true
  ACTIONS_STEP_DEBUG: true

jobs:
  job1:
    name: 拉取代码、编译和上传JAR
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        name: 检出代码
      - name: 设置 JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: 缓存 Maven 依赖
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: 使用 Maven 编译
        run: mvn clean install
      - name: 查找并复制 JAR 工件
        id: find_jar
        run: |
          set -x
          JAR_PATH=$(find target -name "*.jar")
          cp "$JAR_PATH" target/app.jar
          echo "JAR_PATH=target/app.jar" >> $GITHUB_OUTPUT
      - name: 上传 JAR
        id: upload_jar
        uses: actions/upload-artifact@v3
        with:
          name: app.jar
          path: ${{ steps.find_jar.outputs.JAR_PATH }}

  job2:
    name: 制作Linux ARM64工件
    needs: job1
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        name: 下载 JAR
        with:
          name: app.jar
      - name: 设置 JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: 使用 jpackage 创建应用程序镜像 (Linux ARM64)
        run: |
          set -x
          jpackage \
            --name my-app-linux-arm64 \
            --verbose \
            --description "我的 Spring Boot 应用程序 (Linux ARM64)" \
            --vendor "我的公司" \
            --input . \
            --main-jar "app.jar" \
            --dest output-linux-arm64
      - name: 上传 Linux ARM64 工件
        uses: actions/upload-artifact@v3
        with:
          name: linux-arm64-package
          path: output-linux-arm64

  job3:
    name: 制作Linux AMD64工件
    needs: job1
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        name: 下载 JAR
        with:
          name: app.jar
      - name: 设置 JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: 使用 jpackage 创建应用程序镜像 (Linux AMD64)
        run: |
          set -x
          jpackage \
            --name my-app-linux-amd64 \
            --verbose \
            --description "我的 Spring Boot 应用程序 (Linux AMD64)" \
            --vendor "我的公司" \
            --input . \
            --main-jar "app.jar" \
            --dest output-linux-amd64
      - name: 上传 Linux AMD64 工件
        uses: actions/upload-artifact@v3
        with:
          name: linux-amd64-package
          path: output-linux-amd64

  job4:
    name: 制作macOS AMD64工件
    needs: job1
    runs-on: macos-latest
    steps:
      - uses: actions/download-artifact@v3
        name: 下载 JAR
        with:
          name: app.jar
      - name: 设置 JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: 使用 jpackage 创建应用程序镜像 (macOS AMD64)
        run: |
          set -x
          jpackage \
            --name my-app-macos-amd64 \
            --verbose \
            --description "我的 Spring Boot 应用程序 (macOS AMD64)" \
            --vendor "我的公司" \
            --input . \
            --main-jar "app.jar" \
            --dest output-macos-amd64
      - name: 上传 macOS AMD64 工件
        uses: actions/upload-artifact@v3
        with:
          name: macos-amd64-package
          path: output-macos-amd64

  job5:
    name: 制作macOS ARM64工件
    needs: job1
    runs-on: macos-latest
    steps:
      - uses: actions/download-artifact@v3
        name: 下载 JAR
        with:
          name: app.jar
      - name: 设置 JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: 使用 jpackage 创建应用程序镜像 (macOS ARM64)
        run: |
          set -x
          jpackage \
            --name my-app-macos-arm64 \
            --verbose \
            --description "我的 Spring Boot 应用程序 (macOS ARM64)" \
            --vendor "我的公司" \
            --input . \
            --main-jar "app.jar" \
            --dest output-macos-arm64
      - name: 上传 macOS ARM64 工件
        uses: actions/upload-artifact@v3
        with:
          name: macos-arm64-package
          path: output-macos-arm64

  job6:
    name: 制作Windows ARM64工件
    needs: job1
    runs-on: windows-latest
    steps:
      - uses: actions/download-artifact@v3
        name: 下载 JAR
        with:
          name: app.jar
      - name: 设置 JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: 使用 jpackage 创建应用程序镜像 (Windows ARM64)
        shell: bash
        run: |
          set -x
          # Start of Selection
          jpackage \
            --name my-app-windows-arm64 \
            --verbose \
            --description "我的 Spring Boot 应用程序 (Windows ARM64)" \
            --vendor "我的公司" \
            --input . \
            --main-jar "app.jar" \
            --dest output-windows-arm64

      - name: 上传 Windows ARM64 工件
        uses: actions/upload-artifact@v3
        with:
          name: windows-arm64-package
          path: output-windows-arm64
