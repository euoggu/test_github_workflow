name: CI

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: 设置 JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: 构建Maven项目
        run: mvn clean package -DskipTests

      - name: 上传构建产物
        uses: actions/upload-artifact@v3
        with:
          name: built-jar
          path: target/*.jar

      - name: 列出构建产物目录内容
        run: ls -la target/

  release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        arch: [x64, aarch64]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3

      - name: 设置 JDK
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: 下载构建产物
        uses: actions/download-artifact@v3
        with:
          name: built-jar
          path: ./

      - name: 列出下载的目录内容
        run: ls -la

      - name: 获取 JAR 文件名
        run: |
          JAR_FILE=$(find . -name "*.jar" -print -quit)
          echo "JAR_FILE=$JAR_FILE" >> $GITHUB_ENV

      - name: 打包应用程序 - ${{ matrix.os }} ${{ matrix.arch }}
        run: |
          VENDOR="MyCompany" # 将 "YourVendor" 替换为你的供应商名称
          APP_NAME="MyApp"   # 将 "YourAppName" 替换为你的应用名称
          APP_VERSION=$(echo "${GITHUB_REF#refs/tags/}")
          APP_IDENTIFIER_FLAG=""
          if [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            APP_IDENTIFIER_FLAG="--app-identifier com.${VENDOR}.${APP_NAME}"
          fi

          case "${{ matrix.os }}" in
            windows-latest)
              EXT="exe"
              ARCH_FLAG=""
              ;;
            ubuntu-latest)
              EXT="deb"
              ARCH_FLAG=""
              ;;
            macos-latest)
              EXT="pkg"
              MAC_APP_VERSION=$(echo "${APP_VERSION}" | sed 's/^v//' | sed 's/\([0-9]\{4\}\)\([0-9]\{2\}\)\([0-9]\{2\}\).*/\1.\2.\3/')
              if [[ "${{ matrix.arch }}" == "x64" ]]; then
                ARCH_FLAG="--mac-pkg-identifier com.${VENDOR}.${APP_NAME}"
              else
                ARCH_FLAG="--mac-package-identifier com.${VENDOR}.${APP_NAME}"
              fi
              ;;
          esac

          jpackage \
            --dest "build" \
            --type "${EXT}" \
            --app-version "${MAC_APP_VERSION:-$APP_VERSION}" \
            --vendor "${VENDOR}" \
            --name "${APP_NAME}" \
            ${APP_IDENTIFIER_FLAG} \
            --input . \
            --main-jar "${JAR_FILE}" \
            --main-class com.example.githu_bworkflow.GithubWorkflowApplication \
            ${ARCH_FLAG}

      - name: 上传打包好的应用程序 - ${{ matrix.os }}-${{ matrix.arch }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}-${{ matrix.arch }}-packages
          path: release/build
